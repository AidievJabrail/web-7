{"ast":null,"code":"var _jsxFileName = \"/home/jabrail/Labs/Lab7/web-7/src/components/Hello.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hello = () => {\n  _s();\n  const [answer, setAnswer] = useState('');\n  const printHello = async () => {\n    try {\n      const resp = await fetch('http://localhost:8082/get');\n      const data = await resp.text();\n      setAnswer(data);\n    } catch (error) {\n      setAnswer('Нет соединения с сервером');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u0438\\u043A\\u0440\\u043E\\u0441\\u0435\\u0440\\u0432\\u0438\\u0441 Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printHello,\n      children: \"\\u0412\\u044B\\u0432\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041E\\u0442\\u0432\\u0435\\u0442: \", answer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Hello, \"epwReYWmqQUcEJwlNWWu20QHlN0=\");\n_c = Hello;\nexport default Hello;\nvar _c;\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hello","_s","answer","setAnswer","printHello","resp","fetch","data","text","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jabrail/Labs/Lab7/web-7/src/components/Hello.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst Hello = () => {\n    const [answer, setAnswer] = useState('');\n\n    const printHello = async () => {\n        try {\n            const resp = await fetch('http://localhost:8082/get');\n            const data = await resp.text();\n            setAnswer(data);\n        } catch (error) {\n            setAnswer('Нет соединения с сервером');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Микросервис Hello</h2>\n            <button onClick={printHello}>Вывод</button>\n            <p>Ответ: {answer}</p>\n        </div>\n    );\n};\n\nexport default Hello;\n    "],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;MACrD,MAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC9BL,SAAS,CAACI,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZN,SAAS,CAAC,2BAA2B,CAAC;IAC1C;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bf,OAAA;MAAQgB,OAAO,EAAEX,UAAW;MAAAM,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Cf,OAAA;MAAAW,QAAA,GAAG,kCAAO,EAACR,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAACb,EAAA,CApBID,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}